<?php
declare(strict_types=1);

namespace App\Controller\Admin;

use App\Controller\AppController;
use App\Model\Entity\Department;
use App\Model\Table\DepartmentsTable;
use Cake\Datasource\Exception\RecordNotFoundException;
use Cake\Datasource\ResultSetInterface;
use Cake\Event\EventInterface;
use Cake\Http\Response;

/**
 * Departments Controller
 *
 * @property DepartmentsTable $Departments
 * @method Department[]|ResultSetInterface paginate($object = null, array $settings = [])
 */
class DashboardController extends AppController
{
    /**
     * Index method
     *
     * @return Response|null|void Renders view
     */
    public function index()
    {
        // RÃ©cup nb emp per year
        $query = $this->getTableLocator()->get('employees')->find();
        $query->select([
            'nbEmpl' => $query->func()->count('employees.emp_no'),
            'year' => $query->func()->year([
                'employees.hire_date' => 'identifier'
            ])
        ])
        ->join([
            'deem' => [
                'table' => 'dept_emp',
                'conditions' => 'deem.emp_no = employees.emp_no'
            ]
        ])
        ->group([
            $query->func()->year([
                'employees.hire_date' => 'identifier'
            ])
        ])
        ->order([
            $query->func()->year([
                'employees.hire_date' => 'identifier'
            ])
        ]);

        $result = $query->all();

        $arrNbEmpl = [];
        $arrYears = [];

        foreach($result as $row) {
            $arrNbEmpl[] = $row->nbEmpl;

            if (!in_array($row->year, $arrYears)) {
                $arrYears[] = $row->year;
            }
        }

        var_dump($arrYears);
        var_dump($arrNbEmpl);

        $welcomeMessage = '<h1>Welcome in the back-office!</h1>';

        $this->set(compact('welcomeMessage'));
    }

    public function beforeFilter(EventInterface $event)
    {
        parent::beforeFilter($event); // TODO: Change the autogenerated stub

        if (($this->Authentication->getIdentity() === null) || ($this->Authentication->getIdentity()->role !== 'admin')) {
            $this->Flash->error(__('You cannot access this page.'));

            return $this->redirect('/pages');
        }
    }
}
